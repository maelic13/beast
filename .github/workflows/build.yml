name: Build & Attach Executables

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            os_name: linux
            arch: x64
            ext: ""
          - os: ubuntu-24.04-arm
            os_name: linux
            arch: arm64
            ext: ""

          # Windows
          - os: windows-latest
            os_name: windows
            arch: x64
            ext: ".exe"

          # macOS
          - os: macos-13
            os_name: macos
            arch: x64
            ext: ""
          - os: macos-latest
            os_name: macos
            arch: arm64
            ext: ""

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.arch }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: ${{ matrix.arch }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[build]

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --clean --onefile --name beast --optimize=2 src/beast_chess/main.py

      - name: Prepare asset name
        id: prepare-asset
        shell: bash
        run: |
          ASSET_NAME="beast-${{ github.event.release.tag_name }}-${{ matrix.os_name }}-${{ matrix.arch }}${{ matrix.ext }}"
          echo "asset_name=${ASSET_NAME}" >> "$GITHUB_OUTPUT"

      - name: Copy and rename binary
        shell: bash
        run: |
          cp "dist/beast${{ matrix.ext }}" "dist/${{ steps.prepare-asset.outputs.asset_name }}"

      - name: Upload binary to GitHub Release
        uses: softprops/action-gh-release@v2.2.2
        with:
          files: dist/${{ steps.prepare-asset.outputs.asset_name }}
          token: ${{ secrets.GITHUB_TOKEN }}

  package-models:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Zip models directory
        run: zip -r models-${{ github.event.release.tag_name }}.zip models

      - name: Upload models archive to Release
        uses: softprops/action-gh-release@v2.2.2
        with:
          files: models-${{ github.event.release.tag_name }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
