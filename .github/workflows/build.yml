# .github/workflows/build.yml
name: Build & Attach Executables

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            os_name: linux
            arch: x64
          - os: ubuntu-24.04-arm
            os_name: linux
            arch: arm64
          - os: windows-latest
            os_name: windows
            arch: x64
          - os: windows-11-arm
            os_name: windows
            arch: arm64
          - os: macos-latest
            os_name: macos
            arch: arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.arch }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          architecture: ${{ matrix.arch }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[build]

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --clean --onefile --name beast --optimize=2 src/beast_chess/main.py

      - name: Upload binary to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/beast${{ matrix.os_name == 'windows' && '.exe' || '' }}
          asset_name: beast-${{ github.event.release.tag_name }}-${{ matrix.os_name }}-${{ matrix.arch }}${{ matrix.os_name == 'windows' && '.exe' || '' }}
          asset_content_type: application/octet-stream

  package-models:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Zip models directory
        run: zip -r models-${{ github.event.release.tag_name }}.zip models

      - name: Upload models archive to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: models-${{ github.event.release.tag_name }}.zip
          asset_name: models-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip
